{"ast":null,"code":"var _jsxFileName = \"/home/sahil/Documents/mern_project/bloggingSystem/client/src/context/BlogState.js\",\n    _s = $RefreshSig$();\n\n// eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjE0ZWQwNTA5YjM5MWQ0ZDVlYjRmNjg3In0sImlhdCI6MTYzMzEwODQ5OX0.Wefgee7TmaGzKjooxe-acPLSDIlpGpXbJPoaKvxVWpg\nimport BlogContext from \"./BlogContext\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BlogState = props => {\n  _s();\n\n  const host = \"http://localhost:3001\";\n  const checked = {\n    title: \"Software Developer\",\n    description: \"We are software developers. Our work is to  build new softwares\"\n  };\n  const blogsIntitialState = [];\n  const [blogs, setblogs] = useState(blogsIntitialState); // fetching blogs from database\n\n  const getBlogs = async () => {\n    const response = await fetch(`${host}/api/blog/fetchallblogs`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      }\n    });\n    const json = await response.json(); // console.log(json );\n\n    setblogs(json);\n  }; // add a blog\n\n\n  const addBlog = async (title, description) => {\n    const data = {\n      title,\n      description\n    };\n    const response = await fetch(`${host}/api/blog/addblog`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify(data)\n    });\n    const json = await response.json();\n    console.log(json);\n    let blog = json;\n    setblogs(blogs.concat(blog));\n  };\n\n  return /*#__PURE__*/_jsxDEV(BlogContext.Provider, {\n    value: {\n      checked,\n      getBlogs,\n      blogs,\n      addBlog\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BlogState, \"JL4hZhxJON6yDd7PXLJiTZips1Y=\");\n\n_c = BlogState;\nexport default BlogState;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogState\");","map":{"version":3,"sources":["/home/sahil/Documents/mern_project/bloggingSystem/client/src/context/BlogState.js"],"names":["BlogContext","React","useState","BlogState","props","host","checked","title","description","blogsIntitialState","blogs","setblogs","getBlogs","response","fetch","method","headers","localStorage","getItem","json","addBlog","data","body","JSON","stringify","console","log","blog","concat","children"],"mappings":";;;AAAA;AAEA,OAAOA,WAAP,MAAwB,eAAxB;AAEA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,IAAI,GAAG,uBAAb;AACA,QAAMC,OAAO,GAAG;AACdC,IAAAA,KAAK,EAAE,oBADO;AAEdC,IAAAA,WAAW,EACT;AAHY,GAAhB;AAMA,QAAMC,kBAAkB,GAAG,EAA3B;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAACO,kBAAD,CAAlC,CAV2B,CAW3B;;AACA,QAAMG,QAAQ,GAAG,YAAY;AAC3B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAET,IAAK,yBAAT,EAAmC;AAC7DU,MAAAA,MAAM,EAAE,KADqD;AAE7DC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,sBAAcC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAFP;AAFoD,KAAnC,CAA5B;AAQA,UAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAT,EAAnB,CAT2B,CAU3B;;AACAR,IAAAA,QAAQ,CAACQ,IAAD,CAAR;AACD,GAZD,CAZ2B,CA0B3B;;;AAEA,QAAMC,OAAO,GAAG,OAAOb,KAAP,EAAcC,WAAd,KAA8B;AAC5C,UAAMa,IAAI,GAAG;AACXd,MAAAA,KADW;AAEXC,MAAAA;AAFW,KAAb;AAKA,UAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAET,IAAK,mBAAT,EAA6B;AACvDU,MAAAA,MAAM,EAAE,MAD+C;AAEvDC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,sBAAcC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAFP,OAF8C;AAMvDI,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf;AANiD,KAA7B,CAA5B;AASA,UAAMF,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAT,EAAnB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AAEA,QAAIQ,IAAI,GAAGR,IAAX;AAEAR,IAAAA,QAAQ,CAACD,KAAK,CAACkB,MAAN,CAAaD,IAAb,CAAD,CAAR;AACD,GArBD;;AAuBA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAErB,MAAAA,OAAF;AAAWM,MAAAA,QAAX;AAAqBF,MAAAA,KAArB;AAA4BU,MAAAA;AAA5B,KAA7B;AAAA,cACGhB,KAAK,CAACyB;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAxDD;;GAAM1B,S;;KAAAA,S;AA0DN,eAAeA,SAAf","sourcesContent":["// eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjE0ZWQwNTA5YjM5MWQ0ZDVlYjRmNjg3In0sImlhdCI6MTYzMzEwODQ5OX0.Wefgee7TmaGzKjooxe-acPLSDIlpGpXbJPoaKvxVWpg\n\nimport BlogContext from \"./BlogContext\";\n\nimport React, { useState } from \"react\";\n\nconst BlogState = (props) => {\n  const host = \"http://localhost:3001\";\n  const checked = {\n    title: \"Software Developer\",\n    description:\n      \"We are software developers. Our work is to  build new softwares\",\n  };\n\n  const blogsIntitialState = [];\n\n  const [blogs, setblogs] = useState(blogsIntitialState);\n  // fetching blogs from database\n  const getBlogs = async () => {\n    const response = await fetch(`${host}/api/blog/fetchallblogs`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\"),\n      },\n    });\n\n    const json = await response.json();\n    // console.log(json );\n    setblogs(json);\n  };\n\n  // add a blog\n\n  const addBlog = async (title, description) => {\n    const data = {\n      title,\n      description,\n    };\n\n    const response = await fetch(`${host}/api/blog/addblog`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\"),\n      },\n      body: JSON.stringify(data),\n    });\n\n    const json = await response.json();\n    console.log(json);\n\n    let blog = json;\n\n    setblogs(blogs.concat(blog));\n  };\n\n  return (\n    <BlogContext.Provider value={{ checked, getBlogs, blogs, addBlog }}>\n      {props.children}\n    </BlogContext.Provider>\n  );\n};\n\nexport default BlogState;\n"]},"metadata":{},"sourceType":"module"}